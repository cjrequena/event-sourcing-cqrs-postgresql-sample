server.servlet.context-path: / # Context path of the application.
server.port: ${SERVER_PORT:6080} # Server HTTP port.
spring.application.name: '@project.artifactId@'
spring.application.version: '@project.version@'
spring.profiles.active: ${SPRING_PROFILES_ACTIVE:local}
spring.main.allow-bean-definition-overriding: true # Enable bean override

---
spring.config.activate.on-profile: local

spring.config.import: "optional:configserver:${CONFIG_SERVER:http://localhost:8888}/"
spring.cloud.config:
  # Flag to say that remote configuration is enabled. (default false).
  enabled: ${SPRING_CLOUD_CONFIG_ENABLED:false}
  # Flag to indicate that failure to connect to the server is fatal (default false).
  failFast: ${SPRING_CLOUD_CONFIG_FAIL_FAST:true}

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------
# ENDPOINTS WEB CONFIGURATION
management.endpoints.web.exposure.include: '*' # Endpoint IDs that should be included or '*' for all.
management.endpoints.web.exposure.exclude:  # Endpoint IDs that should be excluded or '*' for all.
management.endpoints.web.base-path: /management # Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.
management.endpoints.web.path-mapping.health: healthcheck
# HEALTH ENDPOINT
management.endpoint.health.cache.time-to-live: 0ms # Maximum time that a response can be cached.
management.endpoint.health.enabled: true # Whether to enable the health endpoint.
management.endpoint.health.roles:  # Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.
management.endpoint.health.show-details: always # When to show full health details.
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true
# INFO CONTRIBUTORS (InfoContributorProperties)
management.info.build.enabled: true # Whether to enable build info.
management.info.defaults.enabled: true # Whether to enable default info contributors.
management.info.env.enabled: true # Whether to enable environment info.
management.info.git.enabled: true # Whether to enable git info.
management.info.git.mode: full # Mode to use to expose git information.

# LOGGING
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#appendix.application-properties.core
#logging.config: classpath:log4j2.xml # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
logging.level: # Log levels severity mapping. For instance, `logging.level.org.springframework: DEBUG`.
  org.springframework: ERROR
  org.flywaydb: INFO
  com.zaxxer.hikari: INFO
  com.cjrequena.sample: INFO
  com.cjrequena.eventstore.sample: INFO

logging.pattern:
  console: "%highlight{%-5p|%d{ISO8601}{GMT}|application=${spring.application.name}|traceID=%X{traceId},spanID=%X{spanId}|%c{1}|%m%ex%n}{
      FATAL=bg_red, 
      ERROR=red, 
      WARN=yellow, 
      INFO=green, 
      DEBUG=blue, 
      TRACE=cyan
    }"
  file: "%-5p|%d{ISO8601}{GMT}|application=${spring.application.name}|traceID=%X{traceId},spanID=%X{spanId}|%c{1}|%m%ex%n"

# DataSource Configuration
spring:
  datasource:
    # EventStore DataSource Configuration
    eventstore:
      type: com.zaxxer.hikari.HikariDataSource
      jdbcUrl: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
      driver-class-name: org.postgresql.Driver
      username: postgres
      password: postgres
      testOnBorrow: true
      validationQuery: SELECT 1
      pool-name: EventStoreHikariPool
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 12
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: false
      jpa:
        open-in-view: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            show_sql: false
            format_sql: true
            use_sql: true
            id.new_generator_mappings: false
            search.autoregister_listeners: false
            bytecode.use_reflection_optimizer: false
            jdbc.lob.non_contextual_creation: true
            #default_schema: eventstore
    # ProjectionDB DataSource Configuration
    projectiondb:
      type: com.zaxxer.hikari.HikariDataSource
      jdbcUrl: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
      driver-class-name: org.postgresql.Driver
      username: postgres
      password: postgres
      testOnBorrow: true
      validationQuery: SELECT 1
      pool-name: ProjectionDBHikariPool
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 12
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: false
      jpa:
        open-in-view: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            show_sql: false
            format_sql: true
            use_sql: true
            id.new_generator_mappings: false
            search.autoregister_listeners: false
            bytecode.use_reflection_optimizer: false
            jdbc.lob.non_contextual_creation: true
            default_schema: account

# MongoDB :: Projection
spring.data.mongodb:
  uri: mongodb://root:root@127.0.0.1:27017/account?authSource=admin
  #uri: mongodb://127.0.0.1:27017/account?authSource=admin
  auto-index-creation: true

# Flyway
spring.flyway:
  enabled: true
  baseline-on-migrate: true
  #locations: classpath:/db/migration
  locations: classpath:/db/migration/postgres

# EventStore Conf.
eventstore:
  snapshot:
    # The aggregate type
    ACCOUNT_AGGREGATE:
      enabled: true
      interval: 5
  # Available subscription: polling, postgres-channel, event process.
  subscription:
    enabled: true
    #name: booking-order-subscription-001
    name: event-handler-${random.int(100)}
    polling-initial-delay: PT6S
    polling-interval: PT6S
